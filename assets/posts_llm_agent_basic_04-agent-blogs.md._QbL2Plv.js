import{_ as a,c as l,o as i,ah as r}from"./chunks/framework.CvbyeFFO.js";const u=JSON.parse('{"title":"Agent 思考性文章","description":"","frontmatter":{"title":"Agent 思考性文章","date":"2025-05-14T17:10:27.000Z","create":"2025-05-14T17:10:27.000Z","categories":[],"tags":[]},"headers":[],"relativePath":"posts/llm/agent/basic/04-agent-blogs.md","filePath":"posts/llm/agent/basic/04-agent-blogs.md","lastUpdated":1753200077000}'),t={name:"posts/llm/agent/basic/04-agent-blogs.md"};function n(o,e,s,c,g,m){return i(),l("div",null,e[0]||(e[0]=[r('<div class="custom-block danger"><div class="custom-block-title">本文说明</div><p>本文记录在学习过程中，阅读到的一些其他大咖分享的agent相关的博文内容，持续更新。</p></div><h2 id="agent-相关" tabindex="-1">Agent 相关 <a class="header-anchor" href="#agent-相关" aria-label="Permalink to &quot;Agent 相关&quot;">​</a></h2><h3 id="_2505-关于agent的思考-2025" tabindex="-1">(2505)关于Agent的思考(2025) <a class="header-anchor" href="#_2505-关于agent的思考-2025" aria-label="Permalink to &quot;(2505)关于Agent的思考(2025)&quot;">​</a></h3><blockquote><ul><li><a href="https://zhuanlan.zhihu.com/p/1905773415048143364" target="_blank" rel="noreferrer">(2505) 知乎-关于Agent的思考</a></li><li><a href="https://lilianweng.github.io/posts/2023-06-23-agent/" target="_blank" rel="noreferrer">(2306) lilianweng-LLM Powered Autonomous Agents</a></li></ul></blockquote><p><strong>智能 vs 非智能Agent</strong></p><p><code>非智能Agent</code>：拆分、规划、执行。传统软件开发，高度定制化约定接口，难以扩展和修改。</p><p><code>LLM 智能Agent</code>：为Agent增加智能，有4个关键点：</p><ul><li>📝 <mark>Memory</mark>：长短记忆。短期session历史，长期user历史。</li><li>✍️<mark>Planning</mark>：推理规划能力。复杂任务规划、自我反思等。</li><li>🔨<mark>Tools</mark>：使用工具。</li><li>✋ <mark>Action</mark>：执行操作实现目标任务。</li></ul><div class="custom-block tip"><div class="custom-block-title">自主规划能力</div><ul><li><p><code>workflow</code>虽然好用，但要做出改变世界的东西，仍然<mark>需要LLM自行决定需要调用哪些agent</mark>(<code>规划能力</code>)。</p></li><li><p>另外，从无固定接口到MCP协议，增加了LLM的工具调用能力。</p></li></ul></div><img src="https://lilianweng.github.io/posts/2023-06-23-agent/agent-overview.png" style="display:block;margin:auto;" width="80%"><div class="custom-block tip"><div class="custom-block-title">Agent实现最核心的4个模块</div><p>子agent构建、规划、执行、反思。</p></div><p>具体详细如下：</p><ul><li><mark>子agent构建</mark>：按任务去拆分，如搜索、编码、文档等。<code>目前仍处于不断增加子agent的阶段</code>。</li><li><mark>规划</mark>：挑战很多，非常重要。</li><li>如何做更好的规划？<mark>基于reason+RL微调适配自有场景</mark>，post-train未来2/3的人会转向此方向。</li><li>如何根据下游进展做调整？什么时候调，什么时候不调，其实不好做。也需要<code>reason+rl</code></li><li>技术挑战 <ul><li>环境很重要：很多环境1次reward太久、环境不稳定等等。</li><li>rewar构建：除代码数学这种，离商业化近的<mark>reward往往很难评估</mark>，做一个好的reward</li><li>rl训练方式的优化：</li></ul></li><li><mark>执行</mark>：考验工程产品能力的优化 <ul><li>执行环境：沙盒+前后端组合</li><li>用户交互：建议来回看<a href="https://manus.im/share/brWKUSp51ItvVMBpcXNCZ1?replay=1" target="_blank" rel="noreferrer">manus回放视频</a>、<a href="https://github.com/kortix-ai/suna" target="_blank" rel="noreferrer">suna回放视频</a></li><li>多模态理解能力：如网页理解等，是另外一个世界。</li></ul></li><li><mark>反思</mark>：可能是伪命题？ <ul><li>反思可能只能发现简单错误，<mark>根本性错误很难，不会做就是不会做</mark>。</li><li>很难反思到很深， <ul><li>文章Understanding R1-Zero-Like Training: A Critical Perspective认为，<code>答对题目和反思可能关系没那么大</code>。</li><li>知乎博主认为，可能不是反思不work，只是没有通过反思提高acc而已。</li></ul></li></ul></li><li>Memory <ul><li>规划list不断更新，每次更新把list都塞到llm context中，非常蠢。</li><li>对于重要的、高频读写的，可以用文件方式管理起来，做cache等。</li><li>对于memory过长，就定期做summary(23年就这么做了，现在还这么做...)</li></ul></li></ul><h2 id="agi-相关" tabindex="-1">AGI 相关 <a class="header-anchor" href="#agi-相关" aria-label="Permalink to &quot;AGI 相关&quot;">​</a></h2><p><a href="https://huggingface.co/blog/davehusk/technical-framework-for-building-an-agi" target="_blank" rel="noreferrer">Technical Framework for Building an AGI</a></p><h2 id="mcp-相关" tabindex="-1">MCP 相关 <a class="header-anchor" href="#mcp-相关" aria-label="Permalink to &quot;MCP 相关&quot;">​</a></h2><ul><li><a href="https://huggingface.co/blog/lynn-mikami/n8n-mcp-server" target="_blank" rel="noreferrer">n8n MCP Server: A Quick Look</a></li><li><a href="https://huggingface.co/blog/Kseniase/mcp" target="_blank" rel="noreferrer">What Is MCP, and Why Is Everyone – Suddenly!– Talking About It?</a></li></ul>',17)]))}const k=a(t,[["render",n]]);export{u as __pageData,k as default};
